//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProyectoDSWI.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ProyectoBDEntities : DbContext
    {
        public ProyectoBDEntities()
            : base("name=ProyectoBDEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Categoria> Categoria { get; set; }
        public virtual DbSet<ListaVenta> ListaVenta { get; set; }
        public virtual DbSet<Producto> Producto { get; set; }
        public virtual DbSet<Venta> Venta { get; set; }
        public virtual DbSet<modulo> modulo { get; set; }
        public virtual DbSet<operaciones> operaciones { get; set; }
        public virtual DbSet<rol> rol { get; set; }
        public virtual DbSet<rol_operacion> rol_operacion { get; set; }
        public virtual DbSet<usuario> usuario { get; set; }
    
        public virtual ObjectResult<usp_CategoriaListar_Result> usp_CategoriaListar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CategoriaListar_Result>("usp_CategoriaListar");
        }
    
        public virtual ObjectResult<usp_Producto_Activo_Result> usp_Producto_Activo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Producto_Activo_Result>("usp_Producto_Activo");
        }
    
        public virtual int usp_ProductoActualizar(Nullable<int> idProducto, string nombrePro, Nullable<double> precio, string foto, Nullable<int> idCategoria, Nullable<int> stock)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            var nombreProParameter = nombrePro != null ?
                new ObjectParameter("NombrePro", nombrePro) :
                new ObjectParameter("NombrePro", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(double));
    
            var fotoParameter = foto != null ?
                new ObjectParameter("Foto", foto) :
                new ObjectParameter("Foto", typeof(string));
    
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("IdCategoria", idCategoria) :
                new ObjectParameter("IdCategoria", typeof(int));
    
            var stockParameter = stock.HasValue ?
                new ObjectParameter("Stock", stock) :
                new ObjectParameter("Stock", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ProductoActualizar", idProductoParameter, nombreProParameter, precioParameter, fotoParameter, idCategoriaParameter, stockParameter);
        }
    
        public virtual int usp_ProductoBaja(Nullable<int> idProducto)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ProductoBaja", idProductoParameter);
        }
    
        public virtual ObjectResult<usp_ProductoDatos_Result> usp_ProductoDatos(Nullable<int> idProducto)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProductoDatos_Result>("usp_ProductoDatos", idProductoParameter);
        }
    
        public virtual int usp_ProductoInsertar(string nombrePro, Nullable<double> precio, Nullable<System.DateTime> fechaCreacion, string foto, Nullable<int> idCategoria, Nullable<int> stock)
        {
            var nombreProParameter = nombrePro != null ?
                new ObjectParameter("NombrePro", nombrePro) :
                new ObjectParameter("NombrePro", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(double));
    
            var fechaCreacionParameter = fechaCreacion.HasValue ?
                new ObjectParameter("FechaCreacion", fechaCreacion) :
                new ObjectParameter("FechaCreacion", typeof(System.DateTime));
    
            var fotoParameter = foto != null ?
                new ObjectParameter("Foto", foto) :
                new ObjectParameter("Foto", typeof(string));
    
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("IdCategoria", idCategoria) :
                new ObjectParameter("IdCategoria", typeof(int));
    
            var stockParameter = stock.HasValue ?
                new ObjectParameter("Stock", stock) :
                new ObjectParameter("Stock", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ProductoInsertar", nombreProParameter, precioParameter, fechaCreacionParameter, fotoParameter, idCategoriaParameter, stockParameter);
        }
    }
}
